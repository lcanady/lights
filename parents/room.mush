/*
#############################################################################
### CITY OF LIGHTS ROOM PARENT ##############################################

  This file represents the room parent for the City of Lights.  After
  this file is quoted, make sure to go into your netrhost.conf file and
  set your room_parent or global_room_parent so that all newly dug rooms
  automatically pick up the formatting.

  This file was written to be processed with mush-format
    * https://github.com/digibear-io/mush-format

#############################################################################
*/

// Make sure the rp tag isn't taken before we dig the room parent
// for development, upgrades, etc, etc.

@if not(isdbref(tag(rp))) = {
    @dig Room Parent <RP>;
    @tag/add rp = lastcreate(me, R);
    @flags rp = safe float;
  }

@nameformat #rp =
  
  [ifelse(
      not(hastotem(%#,json)),
      u(
        #gfo/header,
        cname(%!),,
        if(hasflag(%!,IC), IC, OOC)
      ),
      jencode(
        json(
          key(token, securestring(%#))|
          key(cmd, desc)|
          key(name, name(%!))|
          key(image, get(%!/image))|
          key(location, default(%!/location, Somewhere))|
          key(ic, ifelse(hasflag(%!,ic), true, false))|
          key(description, udefault(%!/desc, eval([parent(%!)]/desc))), |
        )
      )
  )]

// Set the parent description defualt so we can manipulate
// the desc before showing it to the room contents.

@set #rp/desc = default
&formatdesc #rp =
  [if(
    not(hastotem(%#, json)),
    %r[wrap(%0,78,l,,,4)]
  )]

@conformat #rp =

  [if( 
    
    and(
      or(not(hasflag(%!,dark)), gte(bittype(%#), 2)),
      not(hastotem(%#, json))
    ),

    %r[u(#gfo/header, Characters)]%r
    [space(3)]
    %ch[ljust(Name, 25)]
    [rjust(Idle, 5)]%b%b
    Title%cn%r
    [repeat(%cy-%cn,77)]
    [iter(
          [lcon(%!/connect)],
        %r[u(%!/fn.player, ##)]
    )]%r
    [u(#gfo/header, Objects,,Exits)]
    [iter(

      // Basically I want to get a list of numbers here,
      // based on the largest number of dbrefs for things
      // and exits.

      lnum(
        max(
          words(setr(0, lcon(%!/object))),
          words(setr(1, lexits(%!)))
        )
      ),

      // Now we're going to use the current number as our index
      // to grab values from our lists.
      %r[ljc(u(%!/fn.things, extract(%q0, add(##, 1), 1)), 50)]
        [rjc(u(%!/fn.exits, extract(%q1, add(##, 1), 1)), 26)]
    )]

  )]
  
  // if the player has the json totem, then trigger a list of
  // players also at their location.
  [if(
    hastotem(%#, json),
    jencode(json(
      key(token, securestring(%#))|
      key(cmd, objects)|
      key(
        characters, 
        jarray(
          iter(
            lcon(%!/connect),
            name(##),,~
          ),~
        )
      )|
      key(things,
        jarray(
          iter(
            lcon(%!/object),
            objeval(%!, name(##)),,~
          ),~
        )
      )|
      key(exits,
        jarray(
          iter(
            lexits(%!),
            objeval(%!, name(##)),,~
          ),~
        )
      ),|
    ))
  )]

  

@exitformat #rp = [if(not(hastotem(%#, json)), u(#gfo/header))]


// Format room player list.
&fn.player #rp =
  printf(
    $^3s$25-s$5s%b%b$38-s,
    u(#gfo/fn.marker,%0),
    cname(%0),
    objeval(%!, singletime(idle(%0))),
    objeval(%!, default(%0/caption, The citizen.))
  )


&fn.json.player #rp = 
  json(
    key(name, name(%0))|
    key(title, default(%0/caption, the commoner))|
    key(prefix, get(%0/titlecaption))|
    key(image, get(%0/image)),|
  )

&fn.things #rp = 
  if(
    strlen(%0),
    [space(3)]a [cname(%0)]
    [objeval(%!,udefault(%0/placement, %b%,sits here.))]
  )

&fn.exits #rp = [edit(edit(cname(%0),<,%cy<%cn),>,%cy>%cn)]%b%b
